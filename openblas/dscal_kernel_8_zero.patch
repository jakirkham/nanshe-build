diff --git a/kernel/x86_64/dscal_microk_haswell-2.c b/kernel/x86_64/dscal_microk_haswell-2.c
index 07a9c80..e7df0fc 100644
--- a/kernel/x86_64/dscal_microk_haswell-2.c
+++ b/kernel/x86_64/dscal_microk_haswell-2.c
@@ -140,67 +140,23 @@ static void dscal_kernel_8( BLASLONG n, FLOAT *alpha, FLOAT *x)
 
 static void dscal_kernel_8_zero( BLASLONG n, FLOAT *alpha, FLOAT *x) __attribute__ ((noinline));
 
-static void dscal_kernel_8_zero( BLASLONG n, FLOAT *alpha, FLOAT *x)
+static void dscal_kernel_8_zero( BLASLONG n, FLOAT *alpha , FLOAT *x )
 {
 
-
-	BLASLONG n1 = n >> 4 ;
-	BLASLONG n2 = n & 8 ;
-
-	__asm__  __volatile__
-	(
-	"vxorpd		%%xmm0, %%xmm0 , %%xmm0		    \n\t"  
-
-	"addq	$128, %1				    \n\t"
-
-	"cmpq 	$0, %0					    \n\t"
-	"je	2f					    \n\t" 
-
-	".align 16				            \n\t"
-	"1:				            	    \n\t"
-
-	"vmovups	%%xmm0  ,-128(%1)		    \n\t"
-	"vmovups	%%xmm0  ,-112(%1)		    \n\t"
-	"vmovups	%%xmm0  , -96(%1)		    \n\t"
-	"vmovups	%%xmm0  , -80(%1)		    \n\t"
-
-	"vmovups	%%xmm0  , -64(%1)		    \n\t"
-	"vmovups	%%xmm0  , -48(%1)		    \n\t"
-	"vmovups	%%xmm0  , -32(%1)		    \n\t"
-	"vmovups	%%xmm0  , -16(%1)		    \n\t"
-
-	"addq		$128, %1	  	 	    \n\t"
-	"subq	        $1 , %0			            \n\t"		
-	"jnz		1b		             	    \n\t"
-
-	"2:				            	    \n\t"
-
-	"cmpq	$8  ,%3					    \n\t"
-	"jne	4f					    \n\t"
-
-	"vmovups	%%xmm0  ,-128(%1)		    \n\t"
-	"vmovups	%%xmm0  ,-112(%1)		    \n\t"
-	"vmovups	%%xmm0  , -96(%1)		    \n\t"
-	"vmovups	%%xmm0  , -80(%1)		    \n\t"
-
-	"4:						    \n\t"
-
-	"vzeroupper					    \n\t"
-
-	:
-        : 
-	  "r" (n1),  	// 0
-          "r" (x),      // 1
-          "r" (alpha),  // 2
-	  "r" (n2)   	// 3
-	: "cc", 
-	  "%xmm0", "%xmm1", "%xmm2", "%xmm3", 
-	  "%xmm4", "%xmm5", "%xmm6", "%xmm7", 
-	  "%xmm8", "%xmm9", "%xmm10", "%xmm11", 
-	  "%xmm12", "%xmm13", "%xmm14", "%xmm15",
-	  "memory"
-	);
-
-} 
+	BLASLONG i;
+	for( i=0; i<n; i+=8 )
+	{
+		x[0] = 0.0;	
+		x[1] = 0.0;	
+		x[2] = 0.0;	
+		x[3] = 0.0;	
+		x[4] = 0.0;	
+		x[5] = 0.0;	
+		x[6] = 0.0;	
+		x[7] = 0.0;	
+		x+=8;
+	}
+
+}
 
 
